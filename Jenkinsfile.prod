pipeline {
    agent any
    
    tools {
        nodejs 'Node 22'  // Configure Node 22 in Jenkins Global Tool Configuration first
    }
    
    environment {
        ENVIRONMENT = 'production'
        BUILD_DIR = 'build-prod'
        PORT = '3000'
        PATH = "C:\\Program Files\\nodejs;${env.PATH}"  // Add Node.js to PATH
    }
    

    stages {

        stage('Production Build') {
            steps {
                echo 'Building for Production Environment'
                bat 'npm ci'
                bat 'set CI=false && set GENERATE_SOURCEMAP=false && set REACT_APP_ENV=production && npm run build'
            }
        }
        
        stage('Production Tests') {
            steps {
                bat 'npm test -- --coverage --watchAll=false --passWithNoTests'
            }
            post {
                always {
                    publishHTML([
                        allowMissing: false,
                        alwaysLinkToLastBuild: true,
                        keepAll: true,
                        reportDir: 'coverage/lcov-report',
                        reportFiles: 'index.html',
                        reportName: 'Production Coverage Report'
                    ])
                }
            }
        }
        
        stage('Security & Quality Checks') {
            steps {
                echo 'Running security and quality checks'
                // Add security scans here
                script {
                    bat(script: 'npm audit', returnStatus: true)
                    echo "Security audit completed - continuing with deployment"
                }
            }
        }
        

        stage('Deploy to Production') {
            steps {
                echo 'Deploying to Production Server'
                // Backup current production
                bat 'if exist "D:\\LATIHAN\\jenkins\\backup" rmdir /s /q "D:\\LATIHAN\\jenkins\\backup"'
                bat 'if exist "D:\\LATIHAN\\jenkins\\prod" xcopy "D:\\LATIHAN\\jenkins\\prod\\*" "D:\\LATIHAN\\jenkins\\backup\\" /E /I /Y'
                
                // Deploy new version
                bat 'if exist "D:\\LATIHAN\\jenkins\\prod" rmdir /s /q "D:\\LATIHAN\\jenkins\\prod"'
                bat 'xcopy "build\\*" "D:\\LATIHAN\\jenkins\\prod\\" /E /I /Y'
                
                // Install PM2 globally if not exists
                bat 'npm list -g pm2 || npm install -g pm2'
                
                // Stop existing production app
                script {
                    bat(script: 'pm2 stop belajar-react-prod', returnStatus: true)
                    bat(script: 'pm2 delete belajar-react-prod', returnStatus: true)
                    echo 'Stopped existing PM2 processes'
                }
                
                // Start production server with PM2
                bat 'pm2 start npx --name "belajar-react-prod" -- serve -s "D:/LATIHAN/jenkins/prod" -p %PORT%'
                bat 'pm2 save'
                
                // Verify production server
                script {
                    bat 'powershell -Command "Start-Sleep -Seconds 5"'
                    bat(script: 'curl -f http://localhost:%PORT%', returnStatus: true)
                    echo 'Production server deployment completed'
                }
            }
        }
        
        stage('Archive Production Build') {
            steps {
                archiveArtifacts artifacts: 'build/**/*', fingerprint: true
            }
        }
    }
    
    post {
        success {
            echo 'Production pipeline completed!'
            echo 'Production deployed! Access at http://localhost:3000'
            echo 'PM2 Status:'
            bat 'pm2 status'
        }
        failure {
            echo 'Production pipeline failed!'
            // Rollback if deployment failed
            bat 'if exist "D:\\LATIHAN\\jenkins\\backup" xcopy "D:\\LATIHAN\\jenkins\\backup\\*" "D:\\LATIHAN\\jenkins\\prod\\" /E /I /Y'
        }
    }
}